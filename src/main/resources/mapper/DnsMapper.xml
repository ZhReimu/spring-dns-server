<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mrx.springdnsserver.mapper.DnsMapper">

    <resultMap id="DnsRecordResultMap" type="DnsRecord">
        <id column="id" property="id"/>
        <result column="host" property="host"/>
        <!-- 一对多的关系 -->
        <!-- property: 指的是集合属性的值,对应类中的属性名 ofType：指的是集合中元素的类型 -->
        <collection property="ips" column="id" ofType="String" select="getIpsByHostId">
            <result column="ip"/>
        </collection>
    </resultMap>

    <resultMap id="GDnsRecordResultMap" type="DnsRecord">
        <id column="id" property="id"/>
        <result column="host" property="host"/>
        <!-- 一对多的关系 -->
        <!-- property: 指的是集合属性的值,对应类中的属性名 ofType：指的是集合中元素的类型 -->
        <collection property="ips" column="id" ofType="String" select="getGHostIpsByGHost">
            <result column="ip"/>
        </collection>
    </resultMap>

    <insert id="addDns">
        INSERT INTO tb_dns(host_id, ip) VALUES
        <foreach collection="ips" item="ip" separator=",">
            (#{hostId},#{ip})
        </foreach>
    </insert>

    <insert id="insertLogBatch">
        INSERT INTO tb_resolve_log(host) VALUES
        <foreach collection="resolveLog" item="host" separator=",">
            (#{host})
        </foreach>
    </insert>

    <insert id="addErrorHost">
        INSERT INTO tb_host_error(host)
        VALUES (#{host})
    </insert>

    <insert id="addHost" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO tb_host(host)
        VALUES (#{host})
    </insert>

    <update id="updateDns">
        UPDATE tb_dns
        SET ip = ip
        WHERE host_id = #{hostId}
    </update>

    <select id="getDnsRecordByHost" resultMap="DnsRecordResultMap">
        SELECT id, host
        FROM tb_host
        WHERE host = #{host,jdbcType=VARCHAR}
    </select>

    <select id="getGDnsRecord" resultMap="GDnsRecordResultMap">
        SELECT id, host
        FROM tb_generic_host
        WHERE INSTR(#{host}, SUBSTRING(host, 3, LENGTH(host))) > 0
    </select>

    <select id="getIPsByHost" resultType="java.lang.String">
        SELECT b.ip
        FROM tb_host AS a
                 INNER JOIN tb_dns AS b ON a.id = b.host_id
        WHERE a.host = #{host}
    </select>

    <select id="getHostFromDB" resultType="com.mrx.springdnsserver.model.dns.Host">
        SELECT *
        FROM tb_host
        WHERE host = #{host}
        LIMIT 1
    </select>

    <select id="getGHostIpsByGHost" resultType="String">
        SELECT ip
        FROM tb_generic_dns
        WHERE host_id = #{hostId}
    </select>

    <select id="getIpsByHostId" resultType="String">
        SELECT ip
        FROM tb_dns
        WHERE host_id = #{hostId}
    </select>

    <select id="countResolveByPeriod" resultType="java.lang.Integer">
        SELECT COUNT(*) AS resolveCount
        FROM tb_resolve_log
        WHERE createTime
                  BETWEEN DATETIME(STRFTIME('%s', 'now') - 60 * #{start}, 'unixepoch', 'localtime')
                  AND DATETIME(STRFTIME('%s', 'now') - 60 * #{end}, 'unixepoch', 'localtime')
    </select>

</mapper>